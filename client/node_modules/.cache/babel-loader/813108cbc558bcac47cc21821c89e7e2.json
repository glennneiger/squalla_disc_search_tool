{"ast":null,"code":"import _classCallCheck from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/Discs/Discs.js\";\nimport React, { Component } from \"react\";\nimport { Grid, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getDiscs } from \"../../redux/actions/discsActions\";\nimport axios from \"axios\";\nimport Disc from \"./Disc/Disc\";\nvar styles = {\n  container: {\n    height: \"calc(100% - 64px)\",\n    marginTop: 64\n  }\n};\n\nvar Discs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Discs, _Component);\n\n  function Discs() {\n    _classCallCheck(this, Discs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Discs).apply(this, arguments));\n  }\n\n  _createClass(Discs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getDiscs();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var discs = this.props.discs.discs;\n\n      var shuffledArray = function shuffledArray(array) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        while (0 !== currentIndex) {\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n      };\n\n      var content;\n\n      if (Object.keys(discs).length > 0) {\n        discs = shuffledArray(discs);\n        content = discs.map(function (disc) {\n          return React.createElement(Grid, {\n            item: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(Disc, {\n            data: disc,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }));\n        });\n      }\n\n      return React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        spacing: 16,\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, content);\n    }\n  }]);\n\n  return Discs;\n}(Component); // Discs.propTypes = {};\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    discs: state.discs\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDiscs: getDiscs\n})(withStyles(styles)(Discs));","map":{"version":3,"sources":["/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/Discs/Discs.js"],"names":["React","Component","Grid","withStyles","PropTypes","connect","getDiscs","axios","Disc","styles","container","height","marginTop","Discs","props","classes","discs","shuffledArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","content","Object","keys","map","disc","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,mBAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,mBADC;AAETC,IAAAA,SAAS,EAAE;AAFF;AADE,CAAf;;IAOMC,K;;;;;;;;;;;;;wCACgB;AAClB,WAAKC,KAAL,CAAWR,QAAX;AACD;;;6BAEQ;AAAA,UACCS,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAAA,UAEDC,KAFC,GAES,KAAKF,KAAL,CAAWE,KAFpB,CAEDA,KAFC;;AAIP,UAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC7B,YAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,YACEC,cADF;AAAA,YAEEC,WAFF;;AAIA,eAAO,MAAMH,YAAb,EAA2B;AACzBG,UAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,UAAAA,YAAY,IAAI,CAAhB;AAEAE,UAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,UAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,UAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,eAAOH,KAAP;AACD,OAfD;;AAiBA,UAAIQ,OAAJ;;AAEA,UAAIC,MAAM,CAACC,IAAP,CAAYZ,KAAZ,EAAmBI,MAAnB,GAA4B,CAAhC,EAAmC;AACjCJ,QAAAA,KAAK,GAAGC,aAAa,CAACD,KAAD,CAArB;AACAU,QAAAA,OAAO,GAAGV,KAAK,CAACa,GAAN,CAAU,UAAAC,IAAI;AAAA,iBACtB,oBAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADsB;AAAA,SAAd,CAAV;AAKD;;AACD,aACE,oBAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,OAAO,EAAE,EAHX;AAIE,QAAA,SAAS,EAAEf,OAAO,CAACL,SAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGgB,OANH,CADF;AAUD;;;;EA9CiBzB,S,GAiDpB;;;AAEA,IAAM8B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChChB,IAAAA,KAAK,EAAEgB,KAAK,CAAChB;AADmB,GAAL;AAAA,CAA7B;;AAIA,eAAeX,OAAO,CACpB0B,eADoB,EAEpB;AAAEzB,EAAAA,QAAQ,EAARA;AAAF,CAFoB,CAAP,CAGbH,UAAU,CAACM,MAAD,CAAV,CAAmBI,KAAnB,CAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, withStyles } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getDiscs } from \"../../redux/actions/discsActions\";\nimport axios from \"axios\";\n\nimport Disc from \"./Disc/Disc\";\n\nconst styles = {\n  container: {\n    height: \"calc(100% - 64px)\",\n    marginTop: 64\n  }\n};\n\nclass Discs extends Component {\n  componentDidMount() {\n    this.props.getDiscs();\n  }\n\n  render() {\n    const { classes } = this.props;\n    let { discs } = this.props.discs;\n\n    const shuffledArray = array => {\n      let currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      return array;\n    };\n\n    let content;\n\n    if (Object.keys(discs).length > 0) {\n      discs = shuffledArray(discs);\n      content = discs.map(disc => (\n        <Grid item>\n          <Disc data={disc} />\n        </Grid>\n      ));\n    }\n    return (\n      <Grid\n        container\n        justify=\"center\"\n        spacing={16}\n        className={classes.container}\n      >\n        {content}\n      </Grid>\n    );\n  }\n}\n\n// Discs.propTypes = {};\n\nconst mapStateToProps = state => ({\n  discs: state.discs\n});\n\nexport default connect(\n  mapStateToProps,\n  { getDiscs }\n)(withStyles(styles)(Discs));\n"]},"metadata":{},"sourceType":"module"}