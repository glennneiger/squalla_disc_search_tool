{"ast":null,"code":"import _classCallCheck from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/header-actions/Add/Add.js\";\nimport React, { Fragment, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser, logoutUser } from \"../../../redux/actions/authActions\";\nimport { Fab, Dialog, DialogContent, DialogContentText, DialogTitle, Button, withStyles } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { red } from \"@material-ui/core/colors\";\nimport AddForm from \"./AddForm\";\nimport LoginForm from \"./LoginForm\";\n\nvar styles = function styles(theme) {\n  return {\n    logout: {\n      color: red[300],\n      borderColor: red[300]\n    },\n    dialog: _defineProperty({}, theme.breakpoints.down(\"sm\"), {\n      padding: 10\n    })\n  };\n};\n\nvar AddDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddDialog, _Component);\n\n  function AddDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.handleToggle = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    };\n\n    _this.loginHandler = function (e) {\n      var userData = {\n        email: _this.state.email,\n        password: _this.state.password\n      };\n\n      _this.props.loginUser(userData);\n    };\n\n    _this.logoutHandler = function () {\n      _this.props.logoutUser();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddDialog, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      var classes = this.props.classes;\n      var isAuthenticated = this.props.auth.isAuthenticated;\n      var dialogContent;\n\n      if (Object.keys(this.props.auth).length > 0) {\n        if (isAuthenticated) {\n          dialogContent = React.createElement(Dialog, {\n            open: open,\n            onClose: this.handleToggle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(Button, {\n            size: \"small\",\n            onClick: this.logoutHandler,\n            className: classes.logout,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, \"Logout\"), React.createElement(DialogContent, {\n            className: classes.dialog,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(DialogTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Add A Disc\"), React.createElement(DialogContentText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \"Please fill out the form below\"), React.createElement(AddForm, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          })));\n        } else {\n          dialogContent = React.createElement(Dialog, {\n            open: open,\n            onClose: this.handleToggle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(DialogContent, {\n            className: classes.dialog,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(DialogTitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, \"Login\"), React.createElement(DialogContentText, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, \"You must be an authorized user to add a disc\"), React.createElement(LoginForm, {\n            email: this.state.email,\n            password: this.state.password,\n            dataHandler: this.handleChange,\n            loginHandler: this.loginHandler,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          })));\n        }\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Fab, {\n        size: \"small\",\n        color: \"secondary\",\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Add, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), dialogContent);\n    }\n  }]);\n\n  return AddDialog;\n}(Component);\n\nAddDialog.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginUser: loginUser,\n  logoutUser: logoutUser\n})(withStyles(styles)(AddDialog));","map":{"version":3,"sources":["/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/header-actions/Add/Add.js"],"names":["React","Fragment","Component","PropTypes","connect","loginUser","logoutUser","Fab","Dialog","DialogContent","DialogContentText","DialogTitle","Button","withStyles","Add","red","AddForm","LoginForm","styles","theme","logout","color","borderColor","dialog","breakpoints","down","padding","AddDialog","state","open","email","password","handleToggle","setState","handleChange","name","event","target","value","loginHandler","e","userData","props","logoutHandler","classes","isAuthenticated","auth","dialogContent","Object","keys","length","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser, logoutUser } from \"../../../redux/actions/authActions\";\nimport {\n  Fab,\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  withStyles\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport { red } from \"@material-ui/core/colors\";\nimport AddForm from \"./AddForm\";\nimport LoginForm from \"./LoginForm\";\n\nconst styles = theme => ({\n  logout: {\n    color: red[300],\n    borderColor: red[300]\n  },\n  dialog: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: 10\n    }\n  }\n});\n\nclass AddDialog extends Component {\n  state = {\n    open: false,\n    email: \"\",\n    password: \"\"\n  };\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    });\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  loginHandler = e => {\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n  };\n\n  logoutHandler = () => {\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { open } = this.state;\n    const { classes } = this.props;\n    const { isAuthenticated } = this.props.auth;\n\n    let dialogContent;\n\n    if (Object.keys(this.props.auth).length > 0) {\n      if (isAuthenticated) {\n        dialogContent = (\n          <Dialog open={open} onClose={this.handleToggle}>\n            <Button\n              size=\"small\"\n              onClick={this.logoutHandler}\n              className={classes.logout}\n            >\n              Logout\n            </Button>\n            <DialogContent className={classes.dialog}>\n              <DialogTitle>Add A Disc</DialogTitle>\n              <DialogContentText>\n                Please fill out the form below\n              </DialogContentText>\n              <AddForm />\n            </DialogContent>\n          </Dialog>\n        );\n      } else {\n        dialogContent = (\n          <Dialog open={open} onClose={this.handleToggle}>\n            <DialogContent className={classes.dialog}>\n              <DialogTitle>Login</DialogTitle>\n              <DialogContentText>\n                You must be an authorized user to add a disc\n              </DialogContentText>\n              <LoginForm\n                email={this.state.email}\n                password={this.state.password}\n                dataHandler={this.handleChange}\n                loginHandler={this.loginHandler}\n              />\n            </DialogContent>\n          </Dialog>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        <Fab size=\"small\" color=\"secondary\" onClick={this.handleToggle}>\n          <Add />\n        </Fab>\n        {dialogContent}\n      </Fragment>\n    );\n  }\n}\n\nAddDialog.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginUser, logoutUser }\n)(withStyles(styles)(AddDialog));\n"]},"metadata":{},"sourceType":"module"}