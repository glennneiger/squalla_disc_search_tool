{"ast":null,"code":"import _classCallCheck from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/header-actions/Filter/Drawer/List/List.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getValues } from \"../../../../../redux/actions/valuesActions\";\nimport { List, ListItem, TextField, Button, FormGroup, FormControlLabel, Switch, withStyles } from \"@material-ui/core\";\nimport SelectInput from \"./Select/SelectInput\";\nimport selectValues from \"./selectValues\";\n\nvar styles = function styles(theme) {\n  return {\n    input: {\n      margin: theme.spacing.unit\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    },\n    button: {\n      width: 75,\n      margin: \"auto\"\n    }\n  };\n};\n\nvar ListComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListComponent, _Component);\n\n  function ListComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.searchByNameHandler = function () {\n      var input = document.getElementById(\"name-search\");\n      var filter = input.value.toUpperCase();\n      var cards = document.querySelectorAll(\"#disc-card\");\n\n      for (var i = 0; i < cards.length; i++) {\n        var name = cards[i].lastChild.firstChild.firstChild.firstChild.textContent;\n\n        if (name.toUpperCase().indexOf(filter) > -1) {\n          cards[i].style.display = \"\";\n        } else {\n          cards[i].style.display = \"none\";\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ListComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getValues();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          toggleRatings = _this$props.toggleRatings,\n          toggleRatingsStatus = _this$props.toggleRatingsStatus,\n          manufactureSelections = _this$props.manufactureSelections,\n          discTypeSelections = _this$props.discTypeSelections,\n          selections = _this$props.selections,\n          handlers = _this$props.handlers,\n          resetButton = _this$props.resetButton;\n      var values = this.props.values.values;\n      return React.createElement(List, {\n        component: \"ul\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: toggleRatingsStatus,\n          onChange: toggleRatings,\n          value: \"checkedA\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }),\n        label: toggleRatingsStatus === false ? \"Infinite Ratings\" : \"Manufacture Ratings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        className: classes.textField,\n        label: \"Search by name\",\n        id: \"name-search\",\n        onChange: this.searchByNameHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(SelectInput, {\n        values: selectValues.manufacture,\n        handleChange: handlers.manufacture,\n        selection: selections.manufacture,\n        data: \"Manufacture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(SelectInput, {\n        values: selectValues.discTypes,\n        handleChange: handlers.type,\n        selection: selections.discType,\n        data: \"Type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(ListItem, {\n        style: {\n          width: \"90%\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Button, {\n        variant: \"contained\",\n        className: classes.button,\n        onClick: resetButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Clear\")));\n    }\n  }]);\n\n  return ListComponent;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    values: state.values\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getValues: getValues\n})(withStyles(styles)(ListComponent));","map":{"version":3,"sources":["/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/header-actions/Filter/Drawer/List/List.js"],"names":["React","Component","connect","getValues","List","ListItem","TextField","Button","FormGroup","FormControlLabel","Switch","withStyles","SelectInput","selectValues","styles","theme","input","margin","spacing","unit","textField","marginLeft","marginRight","width","button","ListComponent","searchByNameHandler","document","getElementById","filter","value","toUpperCase","cards","querySelectorAll","i","length","name","lastChild","firstChild","textContent","indexOf","style","display","props","classes","toggleRatings","toggleRatingsStatus","manufactureSelections","discTypeSelections","selections","handlers","resetButton","values","manufacture","discTypes","type","discType","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getValues } from \"../../../../../redux/actions/valuesActions\";\nimport {\n  List,\n  ListItem,\n  TextField,\n  Button,\n  FormGroup,\n  FormControlLabel,\n  Switch,\n  withStyles\n} from \"@material-ui/core\";\nimport SelectInput from \"./Select/SelectInput\";\n\nimport selectValues from \"./selectValues\";\n\nconst styles = theme => ({\n  input: {\n    margin: theme.spacing.unit\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200\n  },\n  button: {\n    width: 75,\n\n    margin: \"auto\"\n  }\n});\n\nclass ListComponent extends Component {\n  componentDidMount() {\n    this.props.getValues();\n  }\n\n  searchByNameHandler = () => {\n    let input = document.getElementById(\"name-search\");\n    let filter = input.value.toUpperCase();\n    let cards = document.querySelectorAll(\"#disc-card\");\n\n    for (let i = 0; i < cards.length; i++) {\n      let name =\n        cards[i].lastChild.firstChild.firstChild.firstChild.textContent;\n      if (name.toUpperCase().indexOf(filter) > -1) {\n        cards[i].style.display = \"\";\n      } else {\n        cards[i].style.display = \"none\";\n      }\n    }\n  };\n\n  render() {\n    const {\n      classes,\n      toggleRatings,\n      toggleRatingsStatus,\n      manufactureSelections,\n      discTypeSelections,\n      selections,\n      handlers,\n      resetButton\n    } = this.props;\n\n    let { values } = this.props.values;\n\n    return (\n      <List component=\"ul\">\n        <ListItem>\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={toggleRatingsStatus}\n                  onChange={toggleRatings}\n                  value=\"checkedA\"\n                />\n              }\n              label={\n                toggleRatingsStatus === false\n                  ? \"Infinite Ratings\"\n                  : \"Manufacture Ratings\"\n              }\n            />\n          </FormGroup>\n        </ListItem>\n        <ListItem>\n          <TextField\n            className={classes.textField}\n            label=\"Search by name\"\n            id=\"name-search\"\n            onChange={this.searchByNameHandler}\n          />\n        </ListItem>\n        <ListItem>\n          <SelectInput\n            values={selectValues.manufacture}\n            handleChange={handlers.manufacture}\n            selection={selections.manufacture}\n            data=\"Manufacture\"\n          />\n        </ListItem>\n        <ListItem>\n          <SelectInput\n            values={selectValues.discTypes}\n            handleChange={handlers.type}\n            selection={selections.discType}\n            data=\"Type\"\n          />\n        </ListItem>\n        <ListItem style={{ width: \"90%\", margin: \"auto\" }}>\n          <Button variant=\"contained\" className={classes.button}>\n            Submit\n          </Button>\n          <Button\n            variant=\"contained\"\n            className={classes.button}\n            onClick={resetButton}\n          >\n            Clear\n          </Button>\n        </ListItem>\n      </List>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  values: state.values\n});\n\nexport default connect(\n  mapStateToProps,\n  { getValues }\n)(withStyles(styles)(ListComponent));\n"]},"metadata":{},"sourceType":"module"}