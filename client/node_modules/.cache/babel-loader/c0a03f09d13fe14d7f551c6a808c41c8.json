{"ast":null,"code":"import _classCallCheck from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { getDiscs } from \"../redux/actions/discsActions\";\nimport { Header, Footer } from \"./Layout/index\";\nimport Drawer from \"./header-actions/Filter/Drawer/Drawer\";\nimport Discs from \"./Discs/Discs\";\n\nvar shuffledArray = function shuffledArray(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      discs: [],\n      toggleRatings: false,\n      add_disc_open: false,\n      filter_open: false,\n      manufactureSelections: [],\n      discTypeSelections: [],\n      stabilitySelections: [],\n      speedSelections: [],\n      glideSelections: [],\n      turnSelections: [],\n      fadeSelections: []\n    };\n\n    _this.toggle_ratings = function () {\n      _this.setState({\n        toggleRatings: !_this.state.toggleRatings\n      });\n    };\n\n    _this.add_disc_toggle = function () {\n      _this.setState({\n        add_disc_open: !_this.state.add_disc_open\n      });\n    };\n\n    _this.filter_toggle = function () {\n      _this.setState({\n        filter_open: !_this.state.filter_open\n      });\n    };\n\n    _this.filter_handlers = {\n      manufacture: function manufacture(e) {\n        return _this.setState({\n          manufactureSelections: e.target.value\n        });\n      },\n      type: function type(e) {\n        return _this.setState({\n          discTypeSelections: e.target.value\n        });\n      },\n      stability: function stability(e) {\n        return _this.setState({\n          stabilitySelections: e.target.value\n        });\n      },\n      speed: function speed(e) {\n        return _this.setState({\n          speedSelections: e.target.value\n        });\n      },\n      glide: function glide(e) {\n        return _this.setState({\n          glideSelections: e.target.value\n        });\n      },\n      turn: function turn(e) {\n        return _this.setState({\n          turnSelections: e.target.value\n        });\n      },\n      fade: function fade(e) {\n        return _this.setState({\n          fadeSelections: e.target.value\n        });\n      }\n    };\n\n    _this.submit_button = function () {\n      var manufactures = _this.state.manufactureSelections,\n          discType = _this.state.discTypeSelections;\n      var cards = document.querySelectorAll(\"#disc-card\");\n\n      for (var i = 0; i < cards.length; i++) {\n        if (manufactures.length > 0) {\n          var m = cards[i].firstChild.firstChild.title;\n\n          if (!manufactures.includes(m)) {\n            cards[i].style.display = \"none\";\n          }\n        }\n      }\n    };\n\n    _this.clear_button = function () {\n      _this.setState({\n        manufactureSelections: [],\n        discTypeSelections: [],\n        stabilitySelections: [],\n        speedSelections: [],\n        glideSelections: [],\n        turnSelections: [],\n        fadeSelections: []\n      });\n\n      var cards = document.querySelectorAll(\"#disc-card\");\n\n      for (var i = 0; i < cards.length; i++) {\n        cards[i].style.display = \"\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getDiscs();\n\n      if (Object.keys(this.props.discs.discs)) {\n        this.setState({\n          discs: shuffledArray(this.props.discs.discs)\n        });\n        console.log(this.state.discs);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(Header, {\n        filterToggle: this.filter_toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Drawer, {\n        filterToggle: this.filter_toggle,\n        filterStatus: this.state.filter_open,\n        toggleRatings: this.toggle_ratings,\n        toggleRatingsStatus: this.state.toggleRatings,\n        filterHandlers: this.filter_handlers,\n        filterSelections: {\n          manufacture: this.state.manufactureSelections,\n          discType: this.state.discTypeSelections,\n          stability: this.state.stabilitySelections,\n          speed: this.state.speedSelections,\n          glide: this.state.glideSelections,\n          turn: this.state.turnSelections,\n          fade: this.state.fadeSelections\n        },\n        submitButton: this.submit_button,\n        clearButton: this.clear_button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Discs, {\n        toggleRatingsStatus: this.state.toggleRatings,\n        discs: this.state.discs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    discs: state.discs\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDiscs: getDiscs\n})(App);","map":{"version":3,"sources":["/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/App.js"],"names":["React","Component","Fragment","CssBaseline","connect","getDiscs","Header","Footer","Drawer","Discs","shuffledArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","App","state","discs","toggleRatings","add_disc_open","filter_open","manufactureSelections","discTypeSelections","stabilitySelections","speedSelections","glideSelections","turnSelections","fadeSelections","toggle_ratings","setState","add_disc_toggle","filter_toggle","filter_handlers","manufacture","e","target","value","type","stability","speed","glide","turn","fade","submit_button","manufactures","discType","cards","document","querySelectorAll","i","m","firstChild","title","includes","style","display","clear_button","props","Object","keys","console","log","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { getDiscs } from \"../redux/actions/discsActions\";\n\nimport { Header, Footer } from \"./Layout/index\";\nimport Drawer from \"./header-actions/Filter/Drawer/Drawer\";\nimport Discs from \"./Discs/Discs\";\n\nconst shuffledArray = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nclass App extends Component {\n  state = {\n    discs: [],\n    toggleRatings: false,\n    add_disc_open: false,\n    filter_open: false,\n    manufactureSelections: [],\n    discTypeSelections: [],\n    stabilitySelections: [],\n    speedSelections: [],\n    glideSelections: [],\n    turnSelections: [],\n    fadeSelections: []\n  };\n\n  componentDidMount() {\n    this.props.getDiscs();\n    if (Object.keys(this.props.discs.discs)) {\n      this.setState({ discs: shuffledArray(this.props.discs.discs) });\n      console.log(this.state.discs);\n    }\n  }\n\n  toggle_ratings = () => {\n    this.setState({ toggleRatings: !this.state.toggleRatings });\n  };\n\n  add_disc_toggle = () => {\n    this.setState({\n      add_disc_open: !this.state.add_disc_open\n    });\n  };\n\n  filter_toggle = () => {\n    this.setState({\n      filter_open: !this.state.filter_open\n    });\n  };\n\n  filter_handlers = {\n    manufacture: e => this.setState({ manufactureSelections: e.target.value }),\n    type: e => this.setState({ discTypeSelections: e.target.value }),\n    stability: e => this.setState({ stabilitySelections: e.target.value }),\n    speed: e => this.setState({ speedSelections: e.target.value }),\n    glide: e => this.setState({ glideSelections: e.target.value }),\n    turn: e => this.setState({ turnSelections: e.target.value }),\n    fade: e => this.setState({ fadeSelections: e.target.value })\n  };\n\n  submit_button = () => {\n    const manufactures = this.state.manufactureSelections,\n      discType = this.state.discTypeSelections;\n\n    const cards = document.querySelectorAll(\"#disc-card\");\n\n    for (let i = 0; i < cards.length; i++) {\n      if (manufactures.length > 0) {\n        let m = cards[i].firstChild.firstChild.title;\n        if (!manufactures.includes(m)) {\n          cards[i].style.display = \"none\";\n        }\n      }\n    }\n  };\n\n  clear_button = () => {\n    this.setState({\n      manufactureSelections: [],\n      discTypeSelections: [],\n      stabilitySelections: [],\n      speedSelections: [],\n      glideSelections: [],\n      turnSelections: [],\n      fadeSelections: []\n    });\n\n    let cards = document.querySelectorAll(\"#disc-card\");\n\n    for (let i = 0; i < cards.length; i++) {\n      cards[i].style.display = \"\";\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <CssBaseline />\n        <Header filterToggle={this.filter_toggle} />\n        <Drawer\n          filterToggle={this.filter_toggle}\n          filterStatus={this.state.filter_open}\n          toggleRatings={this.toggle_ratings}\n          toggleRatingsStatus={this.state.toggleRatings}\n          filterHandlers={this.filter_handlers}\n          filterSelections={{\n            manufacture: this.state.manufactureSelections,\n            discType: this.state.discTypeSelections,\n            stability: this.state.stabilitySelections,\n            speed: this.state.speedSelections,\n            glide: this.state.glideSelections,\n            turn: this.state.turnSelections,\n            fade: this.state.fadeSelections\n          }}\n          submitButton={this.submit_button}\n          clearButton={this.clear_button}\n        />\n        <Discs\n          toggleRatingsStatus={this.state.toggleRatings}\n          discs={this.state.discs}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  discs: state.discs\n});\n\nexport default connect(\n  mapStateToProps,\n  { getDiscs }\n)(App);\n"]},"metadata":{},"sourceType":"module"}