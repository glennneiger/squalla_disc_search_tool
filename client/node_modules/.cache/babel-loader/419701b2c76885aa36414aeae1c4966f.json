{"ast":null,"code":"import _classCallCheck from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mmangus/Desktop/discs-courses-DB/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { getDiscs } from \"../redux/actions/discsActions\";\nimport { Header, Footer } from \"./Layout/index\";\nimport Drawer from \"./header-actions/Filter/Drawer/Drawer\";\nimport Discs from \"./Discs/Discs\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      toggleRatings: false,\n      add_disc_open: false,\n      filter_open: false,\n      manufactureSelections: [],\n      discTypeSelections: [],\n      stabilitySelections: [],\n      speedSelections: [],\n      glideSelections: [],\n      turnSelections: [],\n      fadeSelections: []\n    };\n\n    _this.toggle_ratings = function () {\n      _this.setState({\n        toggleRatings: !_this.state.toggleRatings\n      });\n    };\n\n    _this.add_disc_toggle = function () {\n      _this.setState({\n        add_disc_open: !_this.state.add_disc_open\n      });\n    };\n\n    _this.filter_toggle = function () {\n      _this.setState({\n        filter_open: !_this.state.filter_open\n      });\n    };\n\n    _this.filter_handlers = {\n      manufacture: function manufacture(e) {\n        return _this.setState({\n          manufactureSelections: e.target.value\n        });\n      },\n      type: function type(e) {\n        return _this.setState({\n          discTypeSelections: e.target.value\n        });\n      },\n      stability: function stability(e) {\n        return _this.setState({\n          stabilitySelections: e.target.value\n        });\n      },\n      speed: function speed(e) {\n        return _this.setState({\n          speedSelections: e.target.value\n        });\n      },\n      glide: function glide(e) {\n        return _this.setState({\n          glideSelections: e.target.value\n        });\n      },\n      turn: function turn(e) {\n        return _this.setState({\n          turnSelections: e.target.value\n        });\n      },\n      fade: function fade(e) {\n        return _this.setState({\n          fadeSelections: e.target.value\n        });\n      }\n    };\n\n    _this.submit_button = function () {\n      var manufactures = _this.state.manufactureSelections,\n          discType = _this.state.discTypeSelections;\n      var cards = document.querySelectorAll(\"#disc-card\");\n\n      var getCards = function getCards(displayedCards) {\n        var newArray = [];\n\n        for (var i = 0; i < displayedCards.length; i++) {\n          if (displayedCards[i].style.display !== \"none\") {\n            newArray.push(displayedCards[i]);\n          }\n        }\n\n        return newArray;\n      };\n\n      var displayedCards = getCards(cards);\n\n      for (var i = 0; i < displayedCards.length; i++) {\n        displayedCards[i].style.display = \"none\";\n\n        if (manufactures.length > 0) {\n          for (var j = 0; j < manufactures.length; j++) {\n            if (displayedCards[i].firstChild.firstChild.title.includes(manufactures[j])) {\n              cards[i].style.display = \"\";\n            }\n          }\n        }\n\n        displayedCards = getCards(displayedCards);\n\n        if (discType.length > 0) {\n          for (var _j = 0; _j < discType.length; _j++) {\n            if (displayedCards[i].lastChild.firstChild.firstChild.lastChild.textContent.includes(discType[_j])) {\n              displayedCards[i].style.display = \"\";\n            }\n          }\n        }\n      }\n    };\n\n    _this.clear_button = function () {\n      _this.setState({\n        manufactureSelections: [],\n        discTypeSelections: [],\n        stabilitySelections: [],\n        speedSelections: [],\n        glideSelections: [],\n        turnSelections: [],\n        fadeSelections: []\n      });\n\n      var cards = document.querySelectorAll(\"#disc-card\");\n\n      for (var i = 0; i < cards.length; i++) {\n        cards[i].style.display = \"\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getDiscs();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Header, {\n        filterToggle: this.filter_toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Drawer, {\n        filterToggle: this.filter_toggle,\n        filterStatus: this.state.filter_open,\n        toggleRatings: this.toggle_ratings,\n        toggleRatingsStatus: this.state.toggleRatings,\n        filterHandlers: this.filter_handlers,\n        filterSelections: {\n          manufacture: this.state.manufactureSelections,\n          discType: this.state.discTypeSelections,\n          stability: this.state.stabilitySelections,\n          speed: this.state.speedSelections,\n          glide: this.state.glideSelections,\n          turn: this.state.turnSelections,\n          fade: this.state.fadeSelections\n        },\n        submitButton: this.submit_button,\n        clearButton: this.clear_button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(Discs, {\n        toggleRatingsStatus: this.state.toggleRatings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    discs: state.discs\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDiscs: getDiscs\n})(App);","map":{"version":3,"sources":["/Users/mmangus/Desktop/discs-courses-DB/client/src/Components/App.js"],"names":["React","Component","Fragment","CssBaseline","connect","getDiscs","Header","Footer","Drawer","Discs","App","state","toggleRatings","add_disc_open","filter_open","manufactureSelections","discTypeSelections","stabilitySelections","speedSelections","glideSelections","turnSelections","fadeSelections","toggle_ratings","setState","add_disc_toggle","filter_toggle","filter_handlers","manufacture","e","target","value","type","stability","speed","glide","turn","fade","submit_button","manufactures","discType","cards","document","querySelectorAll","getCards","displayedCards","newArray","i","length","style","display","push","j","firstChild","title","includes","lastChild","textContent","clear_button","props","mapStateToProps","discs"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { getDiscs } from \"../redux/actions/discsActions\";\n\nimport { Header, Footer } from \"./Layout/index\";\nimport Drawer from \"./header-actions/Filter/Drawer/Drawer\";\nimport Discs from \"./Discs/Discs\";\n\nclass App extends Component {\n  state = {\n    toggleRatings: false,\n    add_disc_open: false,\n    filter_open: false,\n    manufactureSelections: [],\n    discTypeSelections: [],\n    stabilitySelections: [],\n    speedSelections: [],\n    glideSelections: [],\n    turnSelections: [],\n    fadeSelections: []\n  };\n\n  componentDidMount() {\n    this.props.getDiscs();\n  }\n\n  toggle_ratings = () => {\n    this.setState({ toggleRatings: !this.state.toggleRatings });\n  };\n\n  add_disc_toggle = () => {\n    this.setState({\n      add_disc_open: !this.state.add_disc_open\n    });\n  };\n\n  filter_toggle = () => {\n    this.setState({\n      filter_open: !this.state.filter_open\n    });\n  };\n\n  filter_handlers = {\n    manufacture: e => this.setState({ manufactureSelections: e.target.value }),\n    type: e => this.setState({ discTypeSelections: e.target.value }),\n    stability: e => this.setState({ stabilitySelections: e.target.value }),\n    speed: e => this.setState({ speedSelections: e.target.value }),\n    glide: e => this.setState({ glideSelections: e.target.value }),\n    turn: e => this.setState({ turnSelections: e.target.value }),\n    fade: e => this.setState({ fadeSelections: e.target.value })\n  };\n\n  submit_button = () => {\n    const manufactures = this.state.manufactureSelections,\n      discType = this.state.discTypeSelections;\n\n    const cards = document.querySelectorAll(\"#disc-card\");\n\n    const getCards = displayedCards => {\n      const newArray = [];\n      for (let i = 0; i < displayedCards.length; i++) {\n        if (displayedCards[i].style.display !== \"none\") {\n          newArray.push(displayedCards[i]);\n        }\n      }\n      return newArray;\n    };\n\n    let displayedCards = getCards(cards);\n\n    for (let i = 0; i < displayedCards.length; i++) {\n      displayedCards[i].style.display = \"none\";\n\n      if (manufactures.length > 0) {\n        for (let j = 0; j < manufactures.length; j++) {\n          if (\n            displayedCards[i].firstChild.firstChild.title.includes(\n              manufactures[j]\n            )\n          ) {\n            cards[i].style.display = \"\";\n          }\n        }\n      }\n\n      displayedCards = getCards(displayedCards);\n\n      if (discType.length > 0) {\n        for (let j = 0; j < discType.length; j++) {\n          if (\n            displayedCards[\n              i\n            ].lastChild.firstChild.firstChild.lastChild.textContent.includes(\n              discType[j]\n            )\n          ) {\n            displayedCards[i].style.display = \"\";\n          }\n        }\n      }\n    }\n  };\n\n  clear_button = () => {\n    this.setState({\n      manufactureSelections: [],\n      discTypeSelections: [],\n      stabilitySelections: [],\n      speedSelections: [],\n      glideSelections: [],\n      turnSelections: [],\n      fadeSelections: []\n    });\n\n    let cards = document.querySelectorAll(\"#disc-card\");\n\n    for (let i = 0; i < cards.length; i++) {\n      cards[i].style.display = \"\";\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <CssBaseline />\n        <Header filterToggle={this.filter_toggle} />\n        <Drawer\n          filterToggle={this.filter_toggle}\n          filterStatus={this.state.filter_open}\n          toggleRatings={this.toggle_ratings}\n          toggleRatingsStatus={this.state.toggleRatings}\n          filterHandlers={this.filter_handlers}\n          filterSelections={{\n            manufacture: this.state.manufactureSelections,\n            discType: this.state.discTypeSelections,\n            stability: this.state.stabilitySelections,\n            speed: this.state.speedSelections,\n            glide: this.state.glideSelections,\n            turn: this.state.turnSelections,\n            fade: this.state.fadeSelections\n          }}\n          submitButton={this.submit_button}\n          clearButton={this.clear_button}\n        />\n        <Discs toggleRatingsStatus={this.state.toggleRatings} />\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  discs: state.discs\n});\n\nexport default connect(\n  mapStateToProps,\n  { getDiscs }\n)(App);\n"]},"metadata":{},"sourceType":"module"}